##TO-DO##
# Implement join sounds -- done in config
# Implement hover text -- done in config
# World blacklist/whitelist -- done in config
# Delay for join messages -- done in config
# Commands on join/first join/leave
# Vanish support -- done in config
#
#
#
silenceJoinLeaveAbovePlayerCount:
  enable: false
# The amount of players that must be online to silence join/leave messages
# Set to something really high if you don't want this feature
  playerCount: 25

# delay in tick (20 ticks = 1 second) before join message is sent
# in case you have problems with placeholders parsing this can be increased
joinMessageDelay: 20

# Users with this permission will never send join and leave messages
silenceJoinLeavePermission: "prismawelcome.silent"

# Check for players that join in vanish mode
checkVanishPlaceholders:
  enable: false
# PrismaWelcome will only check players with this permission for vanish join
# You should give this to all staff with vanish permissions
  permission: "prismawelcome.staff"
# Send a message to the joining player if they join in vanish
  notifyJoiner: false
  notificationMessage: "You joined in Vanish mode! No join message was sent!"
# Don't edit unless you know what these are
  metadata:
    - "vanished"
    - "Vanished"
# Remove or comment out all placeholder checks that you do not use!
  placeholders:
    - "%essentials_vanished% == yes"
    - "%supervanish_isvanished% == true"
    - "%premiumvanish_isvanished% == true"
    - "%stafffacilities_vanished% == true"
    - "%protocolvanish_player_is_vanished% == true"
    - "%simplevanish_vanished% == true"

# Players joining into this world will have no join/leave messages
worldBlacklist:
  - exampleWorld
  - exampleWorldAlso

welcomeRewarding:
  actionBarEnabled: true
  actionBarReminder: "Welcome new player %player_name% in the next %remaining_time% to get a reward!"
  # Limit to say welcome in seconds
  timeLimit: 30
  # If the message sent by the player contains any of these they will be rewarded
  # Ex. "omg! hi, welcome!" would be accepted because it contains "welcome"
  acceptedWelcomes:
    - "welcome"
    - "greetings"
  # welcomeRewards are console commands to be executed when a player welcomes someone
  # use %player_name% for the name of the player.
  # rewardMode can be random to select a random command from the list or all to execute all commands in the list
  rewardMode: random #random|all
  welcomeRewards:
    - eco give %player_name% 100
    - xp give %player_name% 10

##IMPLEMENT LATER!!!!!##
##IMPLEMENT LATER!!!!!##
##IMPLEMENT LATER!!!!!##
##IMPLEMENT LATER!!!!!##
##IMPLEMENT LATER!!!!!##
# Hover messages are messages shown when someone hovers their mouse over join and leave messages in chat
hoverMessages:
  firstJoin:
    enable: true
    hoverText:
      - "&d------------------------------"
      - "Click to welcome &#9b5f7c%player_name%"
      - "&d------------------------------"
    # Valid clickActions are RUN_COMMAND, SUGGEST_COMMAND, OPEN_URL, and NONE
    clickAction: "RUN_COMMAND"
    clickValue: "/say welcome!"
  join:
    enable: true
    hoverText:
      - "------------------------------"
      - "Name: %player_name%"
      - "Health: %player_health%"
      - "Hunger: %player_food_level%"
      - ""
      - "Click to message %player_name%"
      - "------------------------------"
    clickAction: "SUGGEST_COMMAND"
    clickValue: "/msg %player_name%"
  leave:
    enable: true
    hoverText:
      - "------------------------------"
      - "Name: %player_name%"
      - "Health: %player_health%"
      - "Hunger: %player_food_level%"
      - ""
      - "Cya later %player_name%"
      - "------------------------------"
    clickAction: "OPEN_URL"
    clickValue: "https://namemc.com/profile/{player_name}"

# DO NOT RENAME firstJoinMessage!
# This is the message that will be used when a player joins the server for the first time
firstJoinMessage:
  messages:
    - "&f[&a+&f] &f%player_name% joined the server for the first time!"
    - "&f[&a+&f] &f%player_name% is a new player!"
    - "&f[&a+&f] &fWelcome %player_name% to the server!"
  sound: ""
  commands:
    - "eco give %player% 10"


# DO NOT RENAME defaultMessage!
# This is the message that will be used if the player has no other join/leave messages available to them
defaultMessage:
  messages:
    join:
      - "&f[&a+&f] &f%player_name%"
    leave:
      - "&f[&c-&f] &f%player_name%"
    sounds:
      join: ""
      leave: ""
    commands: []

customMessages:
# The example join/leave message requires players to have the "welcome.example" permission
# You can set permissions to whatever you want! ex. "wow.a.cool.permission" or "group.mod"
# It does not have any placeholder requirements
# You can list multiple join/leave messages in each section!
# If a player has multiple join/leave messages that are applicable to them the plugin will choose at random
  example:
    messages:
      join:
        - "&f[&a+&f] &eHello, &b%player_name%&e! Welcome to the server."
        - "&f[&a+&f] &eHello, &b%player_name%&e! Say hi everyone!"
      leave:
        - "&f[&c-&f] &eGoodbye, &b%player_name%&e! Cya later!"
        - "&f[&c-&f] &eBye, &b%player_name%&e!"
    sounds:
      join: ""
      leave: ""
    commands: []
    permission: welcome.example
    placeholders: []

# Just like the example message except this one has hex color codes!
  hexColorExample:
    messages:
      join:
        - "&f[&a+&f] &eHello, &b%player_name%&e! This is a &#43FBA8hex color message."
      leave:
        - "&f[&c-&f] &eGoodbye, &b%player_name%&e! This is a &#43FBA8hex color message."
    sounds:
      join: ""
      leave: ""
    commands: []
    permission: welcome.hexcolorexample
    placeholders: []

# You can also use placeholders for welcome message conditions
# permissible operators for checking placeholders are:
# '==', '>=', '<=', '>', and '<' for placeholders that return numbers
# 'matches' and 'contains' for placeholders that return strings
#
#
#
# The exampleBoth option requires the player to have the "welcome.exampleboth" permission.
# It also requires the player's health to be 20, You can use any PAPI placeholders for placeholder conditions
  exampleBoth:
    messages:
      join:
        - "&f[&a+&f] &eHello, &b%player_name%&e! BOTH."
      leave:
        - "&f[&c-&f] &eGoodbye, &b%player_name%&e! BOTH."
    sounds:
      join: ""
      leave: ""
    commands: []
    permission: welcome.exampleboth
    placeholders:
      - "%player_health% >= 19"

# The examplePlaceholder option does not require a permission and only requires the placeholders to be true.
# If you don't want to permission you can simply remove the "permission:" option or set it to an empty string with ""
  examplePlaceholder:
    messages:
      join:
        - "&f[&a+&f] &eHello, &b%player_name%&e! You have more than 2 health and less than 18 and your name is KermX!"
      leave:
        - "&f[&c-&f] &eBye, &b%player_name%&e!"
    sounds:
      join: ""
      leave: ""
    commands: []
    permission: ""
    placeholders:
      - "%player_health% > 2"
      - "%player_health% < 18"
      - "%player_name% matches KermX"


# MOTD is a message that is sent only to the player that joins the server
# In this section you can have multiple lines for each motd.
firstJoinMOTD:
  message:
    - "&fHello &f%player_name% welcome to our server!"
    - "&fUse /help to receive help."

# This is the message that will be used if the player has no other MOTD messages available to them
defaultMOTD:
  message:
    - "&eWelcome back &f%player_name%! Your balance is %vault_eco_balance_formatted%"
    - "&eThis is a second line!"

# MOTD is a message that is sent to the player that joins the server
customMOTDs:
  example:
    message:
      - "&eHello, &b%player_name%&e! This is an example motd."
      - "&eThis is the second line of the example motd!"
    permission: motd.example
    placeholders: []

  # Just like the example message except this one has hex color codes!
  hexColorExample:
    message:
      - "&eHello, &b%player_name%&e! This is a &#43FBA8hex color motd."
    permission: motd.hexcolorexample
    placeholders: []

  # You can also use placeholders for welcome message conditions
  # permissible operators for checking placeholders are:
  # '==', '>=', '<=', '>', and '<' for placeholders that return numbers
  # 'matches' and 'contains' for placeholders that return strings
  #
  #
  #
  # The exampleBoth option requires the player to have the "welcome.exampleboth" permission.
  # It also requires the player's health to be 20, You can use any PAPI placeholders for placeholder conditions
  exampleBoth:
    message:
      - "&f[&a+&f] &eHello, &b%player_name%&e! BOTH."
    permission: motd.exampleboth
    placeholders:
      - "%player_health% == 20"

  # The examplePlaceholder option does not require a permission and only requires the placeholders to be true.
  # If you don't want to permission you can simply remove the "permission:" option or set it to an empty string with ""
  examplePlaceholder:
    message:
      - "&eWoah, &b%player_name%&e! Better heal up, you have less than 10 health!"
      - "&eYou need to eat something!"
    permission: ""
    placeholders:
      - "%player_health% < 10"
      - "%player_food_level% < 20"